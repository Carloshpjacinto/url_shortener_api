version: '3.3'

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_USER: postgres
      POSTGRES_DB: url_shortener
    container_name: postgres_container
    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin4
    container_name: pgadmin4_container
    ports:
      - '3200:80'
    depends_on:
      - postgres
    networks:
      - app-network

  app:
    build: .
    container_name: nest_app_container
    command: npm run start:dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: docker
      DATABASE_NAME: url_shortener
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - app-network

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:docker@postgres:5432/url_shortener?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana_container
    ports:
      - '3001:3000'
    depends_on:
      - prometheus
    networks:
      - app-network
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  pgdata:
  grafana-storage:

networks:
  app-network:
